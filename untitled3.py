# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YOEyI26-sdY2cAHz1YiCptwvtddpF_pW
"""

# Commented out IPython magic to ensure Python compatibility.
#importing the library will used 
import numpy as np 
import pandas as pd
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn import metrics
import matplotlib.pyplot as plt
from  io import StringIO
import pydotplus
import matplotlib.image as mpimg
from sklearn import tree
# %matplotlib inline

#loading the dataset and display the fisrt 5 raws of data
train_file = pd.read_csv("b_depressed.csv")
train_file.head()

#using the effective feature to bluid decsion tree with high accuracy 
train_file = train_file[['sex','Age','Married','Number_children','education_level','total_members','incoming_salary','incoming_own_farm','incoming_business','incoming_no_business','labor_primary','depressed']]
X =train_file[['sex','Age','Married','Number_children','education_level','total_members','incoming_salary','incoming_own_farm','incoming_business','incoming_no_business','labor_primary']] .values
#the target
y = train_file['depressed'].values
#print the first five raw in features and taraget  
print(X[:5],'\n\n',y[:5])

#split the data into train data and test data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=3)

#build the model  with max depth five 
drugTree = DecisionTreeClassifier(criterion="entropy", max_depth = 5)

#fit the model with train data
drugTree.fit(X_train,y_train)

#predict the target with test data to check the accuracy of model 
predTree = drugTree.predict(X_testset)
print("DecisionTrees's Accuracy: ", metrics.accuracy_score(y_test, predTree))

dot_data = StringIO()
filename = "drugtree.png"
featureNames = train_file.columns[0:11]
out=tree.export_graphviz(drugTree,feature_names=featureNames, out_file=dot_data, class_names= str(np.unique(y_train)), filled=True,  special_characters=True,rotate=False)  
graph = pydotplus.graph_from_dot_data(dot_data.getvalue())  
graph.write_png(filename)
img = mpimg.imread(filename)
plt.figure(figsize=(100, 200))
plt.imshow(img,interpolation='nearest')